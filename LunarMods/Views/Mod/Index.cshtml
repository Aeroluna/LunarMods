@using LunarMods.Services
@using LunarMods.Utilities
@model IEnumerable<LunarMods.Models.ModDetails>
@inject GameVersionService GameVersionService

@{
    IEnumerable<ModDetails> mods = ViewData.Model ?? throw new InvalidOperationException();
    ViewData["Title"] = "Mods";
}
<h1 class="my-3">Directory</h1>
@foreach (ModDetails item in mods)
{
    <div class="col-4">
        <div class="card mb-3">
            <img class="card-img-top" src="/content/@item.Name.TrimInvalid()/@item.PreviewImage" alt=""/>
            <div class="card-body">
                <div class="row">
                    <h5 class="col-md-auto card-title my-0 pe-0 fw-bold">@item.Name</h5>
                    <h6 class="col-md-auto card-subtitle text-muted align-self-end">by @item.AuthorName</h6>
                </div>
                <p class="card-text text-light mb-1" style="font-size:14px">@item.Category</p>
                <p class="card-text">@item.Overview</p>
                <div class="row mx-0">
                    <a class="col-md-auto btn btn-primary stretched-link" href="/mod/@item.Id" value="View" >View</a>
                    <div class="col"></div>
                    @if (item.LatestVersion != null && !GameVersionService.ContainsLatestVersion(item.LatestVersion.GameVersions))
                    {
                        <span class="col-md-auto align-self-end badge bg-warning ms-1">Outdated</span>
                    }
                    @switch ((Status)(item.LatestVersion?.Status ?? -1))
                    {
                        default:
                            <span class="col-md-auto align-self-end badge bg-secondary ms-1">Unavailable</span>
                            break;

                        case Status.Unapproved:
                            <span class="col-md-auto align-self-end badge bg-danger ms-1">Unapproved</span>
                            break;

                        case Status.Trusted:
                            <span class="col-md-auto align-self-end badge bg-info ms-1">Trusted</span>
                            break;

                        case Status.Approved:
                            <span class="col-md-auto align-self-end badge bg-success ms-1">Approved</span>
                            break;
                    }
                    @{
                        switch (item.Visibility)
                        {
                            case 2: // unlisted
                                <span class="col-md-auto align-self-end badge bg-light ms-1">Unlisted</span>
                                break;
                            case 3: // private
                                <span class="col-md-auto align-self-end badge bg-warning ms-1">Private</span>
                                break;
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}
